(()=>{"use strict";var e={991:(e,n,t)=>{t.d(n,{Z:()=>A});var r=t(15),a=t.n(r),o=t(645),i=t.n(o)()(a());i.push([e.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-family:"SF Pro Text","Helvetica Neue",-apple-system,BlinkMacSystemFont,"Helvetica","Segoe UI","Arial",sans-serif;font-size:1.2em;font-weight:400;background:#111;color:#fff;width:100vw;height:100vh;user-select:none}.head{font-size:1.5em;text-align:center;padding-top:1em;text-transform:uppercase;letter-spacing:.5em}.calendar{display:flex;flex-direction:row;flex-wrap:wrap;margin:1em 2%}.month{padding:1.5em;width:calc(100% * 1/3 - 3em)}@media screen and (max-width: 550px){.month{width:calc(100% - 3em)}}@media screen and (max-width: 900px)and (min-width: 550px){.month{width:calc(100% * 1/2 - 3em)}}.month-name{text-align:left;margin-bottom:1em}.month-months,.days-labels{display:flex;flex-wrap:wrap}.date,.offset-block,.label{text-align:right;padding:.8em .15em;width:calc(100% * 1/7 - .3em)}.date,.next-year,.prev-year{cursor:pointer;transition:.2s all}.date:hover,.next-year:hover,.prev-year:hover{color:#0074d9}.label{color:#555}.offset-block{color:transparent}.today{color:#0074d9}.calendar{display:flex;flex-direction:row;flex-wrap:wrap;margin:1em 2%}.month{padding:1.5em;width:calc(100% * 1/3 - 3em)}@media screen and (max-width: 550px){.month{width:calc(100% - 3em)}}@media screen and (max-width: 900px)and (min-width: 550px){.month{width:calc(100% * 1/2 - 3em)}}.month-name{text-align:left;margin-bottom:1em}.month-months,.days-labels{display:flex;flex-wrap:wrap}.date,.offset-block,.label{text-align:right;padding:.8em .15em;width:calc(100% * 1/7 - .3em)}.date{cursor:pointer}.label{color:#555}.offset-block{color:transparent}.today{color:#0074d9}.journal{margin:1em 20%}.journal-heading{font-size:1.4em}.journal-editor{background:transparent;color:#fff;border:0;width:100%;height:100vh;padding-top:1em}header{display:flex;flex-direction:column;padding:1em 0}.header-years{margin-bottom:1em}.header-months{flex-wrap:wrap}.header-years,.header-months{display:flex;justify-content:center;align-items:center}.header-month{padding:.5em 1em;font-size:.9em;transition:.2s all;border-radius:8px}.header-month:hover{background-color:#0074d9;color:#111}.current-year{cursor:pointer;font-size:2rem;padding:0 1em}.next-year,.prev-year{cursor:pointer}',"",{version:3,sources:["webpack://src/scss/_normalize.scss","webpack://src/scss/_common.scss","webpack://src/scss/_variables.scss","webpack://src/scss/_calendar.scss","webpack://src/scss/_journal.scss","webpack://src/scss/_header.scss"],names:[],mappings:"AAAA,2EAAA,CAUC,KACG,gBAAA,CACA,6BAAA,CAUF,KACE,QAAA,CAOF,KACE,aAAA,CAQF,GACE,aAAA,CACA,cAAA,CAWF,GACE,sBAAA,CACA,QAAA,CACA,gBAAA,CAQF,IACE,+BAAA,CACA,aAAA,CAUF,EACE,4BAAA,CAQF,YACE,kBAAA,CACA,yBAAA,CACA,gCAAA,CAOF,SAEE,kBAAA,CAQF,cAGE,+BAAA,CACA,aAAA,CAOF,MACE,aAAA,CAQF,QAEE,aAAA,CACA,aAAA,CACA,iBAAA,CACA,uBAAA,CAGF,IACE,cAAA,CAGF,IACE,UAAA,CAUF,IACE,iBAAA,CAWF,sCAKE,mBAAA,CACA,cAAA,CACA,gBAAA,CACA,QAAA,CAQF,aAEE,gBAAA,CAQF,cAEE,mBAAA,CAOF,gDAIE,yBAAA,CAOF,wHAIE,iBAAA,CACA,SAAA,CAOF,4GAIE,6BAAA,CAOF,SACE,0BAAA,CAUF,OACE,qBAAA,CACA,aAAA,CACA,aAAA,CACA,cAAA,CACA,SAAA,CACA,kBAAA,CAOF,SACE,uBAAA,CAOF,SACE,aAAA,CAQF,6BAEE,qBAAA,CACA,SAAA,CAOF,kFAEE,WAAA,CAQF,cACE,4BAAA,CACA,mBAAA,CAOF,yCACE,uBAAA,CAQF,6BACE,yBAAA,CACA,YAAA,CAUF,QACE,aAAA,CAOF,QACE,iBAAA,CAUF,SACE,YAAA,CAOF,SACE,YAAA,CC1VJ,KACI,qHAAA,CACA,eAAA,CACA,eAAA,CACA,eCLC,CDMD,UCLC,CDOD,WAAA,CACA,YAAA,CACA,gBAAA,CAGJ,MACI,eAAA,CACA,iBAAA,CACA,eAAA,CACA,wBAAA,CACA,mBAAA,CAGJ,UACI,YAAA,CACA,kBAAA,CACA,cAAA,CAEA,aAAA,CAGJ,OACI,aAAA,CACA,4BAAA,CAEA,qCAJJ,OAKQ,sBAAA,CAAA,CAGJ,2DARJ,OASQ,4BAAA,CAAA,CAMR,YACI,eAAA,CACA,iBAAA,CAGJ,2BAEI,YAAA,CACA,cAAA,CAGJ,2BACI,gBAAA,CACA,kBAAA,CACA,6BAAA,CAIJ,4BACI,cAAA,CACA,kBAAA,CACA,8CACI,aC/DD,CDmEP,OACI,UCrEI,CDwER,cACI,iBAAA,CAGJ,OACI,aC5EG,CCHP,UACI,YAAA,CACA,kBAAA,CACA,cAAA,CAEA,aAAA,CAGJ,OACI,aAAA,CACA,4BAAA,CAEA,qCAJJ,OAKQ,sBAAA,CAAA,CAGJ,2DARJ,OASQ,4BAAA,CAAA,CAMR,YACI,eAAA,CACA,iBAAA,CAGJ,2BAEI,YAAA,CACA,cAAA,CAGJ,2BACI,gBAAA,CACA,kBAAA,CACA,6BAAA,CAGJ,MACI,cAAA,CAGJ,OACI,UAAA,CAGJ,cACI,iBAAA,CAGJ,OACI,aAAA,CCrDJ,SACI,cAAA,CAGJ,iBACI,eAAA,CAGJ,gBACI,sBAAA,CACA,UAAA,CACA,QAAA,CACA,UAAA,CACA,YAAA,CACA,eAAA,CCdJ,OACI,YAAA,CACA,qBAAA,CACA,aAAA,CAGJ,cACI,iBAAA,CAGJ,eACI,cAAA,CAGJ,6BACI,YAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,cACI,gBAAA,CACA,cAAA,CACA,kBAAA,CACA,iBAAA,CACA,oBACI,wBHvBD,CGwBC,UH3BH,CG+BL,cACI,cAAA,CACA,cAAA,CACA,aAAA,CAGJ,sBACI,cAAA",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\n html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n  \n  /* Sections\n     ========================================================================== */\n  \n  /**\n   * Remove the margin in all browsers.\n   */\n  \n  body {\n    margin: 0;\n  }\n  \n  /**\n   * Render the `main` element consistently in IE.\n   */\n  \n  main {\n    display: block;\n  }\n  \n  /**\n   * Correct the font size and margin on `h1` elements within `section` and\n   * `article` contexts in Chrome, Firefox, and Safari.\n   */\n  \n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  \n  /* Grouping content\n     ========================================================================== */\n  \n  /**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n  \n  hr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n  }\n  \n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n  \n  pre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  \n  /* Text-level semantics\n     ========================================================================== */\n  \n  /**\n   * Remove the gray background on active links in IE 10.\n   */\n  \n  a {\n    background-color: transparent;\n  }\n  \n  /**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n  \n  abbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n  }\n  \n  /**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n  \n  b,\n  strong {\n    font-weight: bolder;\n  }\n  \n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd `em` font sizing in all browsers.\n   */\n  \n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n  \n  /**\n   * Add the correct font size in all browsers.\n   */\n  \n  small {\n    font-size: 80%;\n  }\n  \n  /**\n   * Prevent `sub` and `sup` elements from affecting the line height in\n   * all browsers.\n   */\n  \n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  \n  sub {\n    bottom: -0.25em;\n  }\n  \n  sup {\n    top: -0.5em;\n  }\n  \n  /* Embedded content\n     ========================================================================== */\n  \n  /**\n   * Remove the border on images inside links in IE 10.\n   */\n  \n  img {\n    border-style: none;\n  }\n  \n  /* Forms\n     ========================================================================== */\n  \n  /**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n  \n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n  \n  /**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n  \n  button,\n  input { /* 1 */\n    overflow: visible;\n  }\n  \n  /**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n  \n  button,\n  select { /* 1 */\n    text-transform: none;\n  }\n  \n  /**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n  \n  button,\n  [type="button"],\n  [type="reset"],\n  [type="submit"] {\n    -webkit-appearance: button;\n  }\n  \n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n  \n  button::-moz-focus-inner,\n  [type="button"]::-moz-focus-inner,\n  [type="reset"]::-moz-focus-inner,\n  [type="submit"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  \n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n  \n  button:-moz-focusring,\n  [type="button"]:-moz-focusring,\n  [type="reset"]:-moz-focusring,\n  [type="submit"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  \n  /**\n   * Correct the padding in Firefox.\n   */\n  \n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  \n  /**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    `fieldset` elements in all browsers.\n   */\n  \n  legend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n  }\n  \n  /**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n  \n  progress {\n    vertical-align: baseline;\n  }\n  \n  /**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n  \n  textarea {\n    overflow: auto;\n  }\n  \n  /**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n  \n  [type="checkbox"],\n  [type="radio"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n  \n  /**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n  \n  [type="number"]::-webkit-inner-spin-button,\n  [type="number"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  \n  /**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n  \n  [type="search"] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n  \n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n  \n  [type="search"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  \n  /**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to `inherit` in Safari.\n   */\n  \n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n  \n  /* Interactive\n     ========================================================================== */\n  \n  /*\n   * Add the correct display in Edge, IE 10+, and Firefox.\n   */\n  \n  details {\n    display: block;\n  }\n  \n  /*\n   * Add the correct display in all browsers.\n   */\n  \n  summary {\n    display: list-item;\n  }\n  \n  /* Misc\n     ========================================================================== */\n  \n  /**\n   * Add the correct display in IE 10+.\n   */\n  \n  template {\n    display: none;\n  }\n  \n  /**\n   * Add the correct display in IE 10.\n   */\n  \n  [hidden] {\n    display: none;\n  }\n  ','\nhtml {\n    font-family: "SF Pro Text","Helvetica Neue",-apple-system,BlinkMacSystemFont,"Helvetica","Segoe UI","Arial",sans-serif;\n    font-size: 1.2em;\n    font-weight: 400;\n    background: $bg;\n    color: $fg;\n\n    width: 100vw;\n    height: 100vh;\n    user-select: none;\n}\n\n.head {\n    font-size: 1.5em;\n    text-align: center;\n    padding-top: 1em;\n    text-transform: uppercase;\n    letter-spacing: .5em;\n}\n\n.calendar {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 1em 2%;\n}\n\n.month {\n    padding: 1.5em;\n    width: calc(100% * 1/3 - 3em);\n\n    @media screen and (max-width: 550px) {\n        width: calc(100% - 3em);\n    }\n\n    @media screen and (max-width: 900px) and (min-width: 550px)  {\n        width: calc(100% * 1/2 - 3em);\n    }\n\n   \n}\n\n.month-name {\n    text-align: left;\n    margin-bottom: 1em;\n}\n\n.month-months, .days-labels {\n\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.date, .offset-block, .label {\n    text-align: right;\n    padding: .8em .15em;\n    width: calc(100% * 1/7 - .3em);\n    \n}\n\n.date, .next-year, .prev-year {\n    cursor: pointer;\n    transition: .2s all;\n    &:hover {\n        color: $link;\n    }\n}\n\n.label {\n    color: $label;\n}\n\n.offset-block {\n    color: transparent;\n}\n\n.today {\n    color: $link;\n}',"$bg: #111;\n$fg: #fff;\n$label: #555;\n$link: #0074D9;\n",".calendar {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 1em 2%;\n}\n\n.month {\n    padding: 1.5em;\n    width: calc(100% * 1/3 - 3em);\n\n    @media screen and (max-width: 550px) {\n        width: calc(100% - 3em);\n    }\n\n    @media screen and (max-width: 900px) and (min-width: 550px)  {\n        width: calc(100% * 1/2 - 3em);\n    }\n\n   \n}\n\n.month-name {\n    text-align: left;\n    margin-bottom: 1em;\n}\n\n.month-months, .days-labels {\n\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.date, .offset-block, .label {\n    text-align: right;\n    padding: .8em .15em;\n    width: calc(100% * 1/7 - .3em);\n}\n\n.date {\n    cursor: pointer;\n}\n\n.label {\n    color: #555;\n}\n\n.offset-block {\n    color: transparent;\n}\n\n.today {\n    color: #0074D9;\n}",".journal {\n    margin: 1em 20%;\n}\n\n.journal-heading {\n    font-size: 1.4em;\n}\n\n.journal-editor {\n    background: transparent;\n    color: #fff;\n    border: 0;\n    width: 100%;\n    height: 100vh;\n    padding-top: 1em;\n}","header {\n    display: flex;\n    flex-direction: column;\n    padding: 1em 0;\n}\n\n.header-years {\n    margin-bottom: 1em;\n}\n\n.header-months {\n    flex-wrap: wrap;\n}\n\n.header-years, .header-months {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.header-month {\n    padding: .5em 1em;\n    font-size: .9em;\n    transition: .2s all;\n    border-radius: 8px;\n    &:hover {\n        background-color: $link;\n        color: $bg;\n    }\n}\n\n.current-year {\n    cursor: pointer;\n    font-size: 2rem;\n    padding: 0 1em;\n}\n\n.next-year, .prev-year {\n    cursor: pointer;\n}"],sourceRoot:""}]);const A=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var o=0;o<this.length;o++){var i=this[o][0];null!=i&&(a[i]=!0)}for(var A=0;A<e.length;A++){var s=[].concat(e[A]);r&&a[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}e.exports=function(e){var t,r,a=(r=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var t=[],r=!0,a=!1,o=void 0;try{for(var i,A=e[Symbol.iterator]();!(r=(i=A.next()).done)&&(t.push(i.value),!n||t.length!==n);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==A.return||A.return()}finally{if(a)throw o}}return t}}(t,r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=a[1],i=a[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),d="/*# ".concat(s," */"),l=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[o].concat(l).concat([d]).join("\n")}return[o].join("\n")}},379:(e,n,t)=>{var r,a=function(){var e={};return function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[n]=t}return e[n]}}(),o=[];function i(e){for(var n=-1,t=0;t<o.length;t++)if(o[t].identifier===e){n=t;break}return n}function A(e,n){for(var t={},r=[],a=0;a<e.length;a++){var A=e[a],s=n.base?A[0]+n.base:A[0],d=t[s]||0,l="".concat(s," ").concat(d);t[s]=d+1;var c=i(l),m={css:A[1],media:A[2],sourceMap:A[3]};-1!==c?(o[c].references++,o[c].updater(m)):o.push({identifier:l,updater:p(m,n),references:1}),r.push(l)}return r}function s(e){var n=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){n.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(n);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}return n}var d,l=(d=[],function(e,n){return d[e]=n,d.filter(Boolean).join("\n")});function c(e,n,t,r){var a=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=l(n,a);else{var o=document.createTextNode(a),i=e.childNodes;i[n]&&e.removeChild(i[n]),i.length?e.insertBefore(o,i[n]):e.appendChild(o)}}function m(e,n,t){var r=t.css,a=t.media,o=t.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,u=0;function p(e,n){var t,r,a;if(n.singleton){var o=u++;t=h||(h=s(n)),r=c.bind(null,t,o,!1),a=c.bind(null,t,o,!0)}else t=s(n),r=m.bind(null,t,n),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return r(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;r(e=n)}else a()}}e.exports=function(e,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=A(e=e||[],n);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<t.length;r++){var a=i(t[r]);o[a].references--}for(var s=A(e,n),d=0;d<t.length;d++){var l=i(t[d]);0===o[l].references&&(o[l].updater(),o.splice(l,1))}t=s}}}}},n={};function t(r){if(n[r])return n[r].exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e=t(379),n=t.n(e),r=t(991);n()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;const a={makeCalendar:()=>{let e=document.createElement("div");return e.classList.add("calendar"),e},makeMonth:e=>{let n=document.createElement("div");n.classList.add("month");let t=document.createElement("div");t.classList.add("month-name"),t.textContent=new Intl.DateTimeFormat("en-us",{month:"long"}).format(e),n.appendChild(t),n.appendChild(a.addLabels());let r=document.createElement("div");return r.classList.add("month-months"),n.appendChild(r),n},makeDay:e=>{let n=document.createElement("div");return n.classList.add("date"),n.textContent=e.getDate(),n.dataset.date=e.toLocaleDateString("en-us",{year:"numeric",month:"numeric",day:"numeric"}),n},makeOffset:e=>{let n=document.createDocumentFragment();for(let t=0;t<e;t++){let e=document.createElement("div");e.classList.add("offset-block"),e.innerHTML="00",n.appendChild(e)}return n},addLabels:()=>{let e=document.createElement("div");return e.classList.add("days-labels"),["S","M","T","W","T","F","S"].forEach((n=>{let t=document.createElement("div");t.classList.add("label"),t.textContent=n,e.appendChild(t)})),e},getToday:e=>(e.classList.add("today"),e),makeJournal:e=>{let n=document.createElement("div");n.classList.add("journal");let t=document.createElement("div");t.classList.add("journal-heading"),t.textContent=e.toLocaleDateString("en-us",{month:"long",day:"numeric"}),n.appendChild(t);let r=document.createElement("textarea");return r.classList.add("journal-editor"),n.appendChild(r),n},makeYear:(e,n)=>{let t=document.createElement("div");return t.textContent=e,t.classList.add(n+"-year"),t}},o=a;class i{constructor(e,n){this.year=e,this.month=n}show(){let e=new Date(this.year,this.month,0),n=o.makeMonth(e);for(let t=1;t<=e.getDate();t++){let r=new Date(e.getFullYear(),e.getMonth(),t);1==t&&n.childNodes[2].appendChild(o.makeOffset(r.getDay()));let a=o.makeDay(r);a.addEventListener("click",(e=>{r.toLocaleDateString("en-us",{year:"numeric",month:"numeric",day:"numeric"})})),n.childNodes[2].appendChild(a)}return n}}class A{constructor(e,n){this.year=n,this.state=e,this.dom=document.createDocumentFragment();let t=o.makeCalendar();for(let e=1;e<=12;e++){let n=this.buildMonth(e);t.appendChild(n)}this.dom.appendChild(t);let r=this.dom.querySelector(`[data-date="${(new Date).toLocaleDateString("en-us",{year:"numeric",month:"numeric",day:"numeric"})}"]`);r&&o.getToday(r)}buildMonth(e){return new i(this.year,e).show()}}class s{constructor(e,n,t){this.dom=n,this.state=e,this.curDate=t,this.current=t.getFullYear(),this.prev=this.current-1,this.next=this.current+1,this.buildHeader()}setCurrent(e){this.current=e,this.prev=this.current-1,this.next=this.current+1,this.buildHeader()}buildHeader(){this.dom.innerHTML="",this.buildYears(),this.buildMonths()}buildYears(){let e=document.createElement("div");e.classList.add("header-years");let n=o.makeYear(this.prev,"prev");n.addEventListener("click",(e=>{let n="year-"+this.prev;this.state.addAndChangeView(n,new A(this.state,this.prev)),this.setCurrent(this.prev)})),e.appendChild(n);let t=o.makeYear(this.current,"current");t.addEventListener("click",(e=>{let n="year-"+this.next;this.state.addAndChangeView(n,new A(this.state,this.curDate.getFullYear())),this.setCurrent(this.curDate.getFullYear())})),e.appendChild(t);let r=o.makeYear(this.next,"next");r.addEventListener("click",(e=>{let n="year-"+this.next;this.state.addAndChangeView(n,new A(this.state,this.next)),this.setCurrent(this.next)})),e.appendChild(r),this.dom.append(e)}buildMonths(){let e=document.createElement("div");e.classList.add("header-months");for(let n of this._listMonths()){let t=document.createElement("div");t.classList.add("header-month"),t.textContent=n,e.append(t)}this.dom.append(e)}_listMonths(){let e=[];for(let n=0;n<12;n++)e.push(new Date(this.current,n,1).toLocaleDateString("en-us",{month:"short"}));return e}}class d{constructor(e){this.dom=e}isView(e){return document.querySelector(`[data-key="${e}"]`)}addView(e,n){let t=document.createElement("div");t.classList.add("view"),t.style.display="none",t.dataset.key=e,t.appendChild(n.dom),this.dom.appendChild(t)}addAndChangeView(e,n){this.isView(e)||this.addView(e,n),this.changeView(e)}changeView(e){document.querySelectorAll(".view").forEach((e=>e.style.display="none")),document.querySelector(`[data-key="${e}"]`).style.display="block"}}const l=document.querySelector("header"),c=document.querySelector("#app");window.addEventListener("load",(function(){let e=new Date,n=new d(c),t=(new s(n,l,e),new A(n,e.getFullYear()));n.addView("calendar",t),n.changeView("calendar")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,